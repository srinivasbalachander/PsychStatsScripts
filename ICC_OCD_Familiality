library(psych)
library(qgraph)
library(lme4)
library(lmerTest)
library(sjstats)
library(dplyr)
library(ggplot2)

#Input the familiality data, without names from DUMMYSLNO Onwards
fam <- read.clipboard.tab()
fam_cl <- fam[ ,8:23]
fam_cl <- fam_cl[,c(-2,-9)]

#Factor Analysis for Symptom Dimensions
fa1 <- fa(fam_cl, nfactors = 5, cor = "tetrachoric")

fa.diagram(fa1)
qgraph.loadings(loadings(fa1), cut=0.3)

fa2 <- fa(fam_cl, nfactors = 5, rotate = "varimax", scores = "regression")
fa.diagram(fa2)
qgraph.loadings(loadings(fa2), cut=0.3)

fam_fa <- cbind(fam[,c(1,2,3,4,5,6,7)], fa2[["scores"]])

rm(fam, fam_cl)

#Bootstrap Samples for ICC
dummy <- fam_fa %>% bootstrap(100) 

#Calculating ICCs in each Bootstrapped Sample for each of the Factors
dummy_MR1 <- dummy %>% mutate(models = lapply(.$strap, function(x) {
             lmer(MR1 ~ 1 + (1 | DUMMY_FAMNO), data = x)})) %>% 
             mutate(icc = lapply(.$models, performance::icc)) %>%
             mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))
dummy_MR2 <- dummy %>% mutate(models = lapply(.$strap, function(x) {
             lmer(MR2 ~ 1 + (1 | DUMMY_FAMNO), data = x)})) %>% 
             mutate(icc = lapply(.$models, performance::icc)) %>%
             mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))
dummy_MR3 <- dummy %>% mutate(models = lapply(.$strap, function(x) {
             lmer(MR3 ~ 1 + (1 | DUMMY_FAMNO), data = x)})) %>% 
             mutate(icc = lapply(.$models, performance::icc)) %>%
             mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))
dummy_MR4 <- dummy %>% mutate(models = lapply(.$strap, function(x) {
             lmer(MR2 ~ 1 + (1 | DUMMY_FAMNO), data = x) })) %>% 
             mutate(icc = lapply(.$models, performance::icc)) %>%
             mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))
dummy_MR5 <- dummy %>% mutate(models = lapply(.$strap, function(x) {
              lmer(MR5 ~ 1 + (1 | DUMMY_FAMNO), data = x)})) %>% 
              mutate(icc = lapply(.$models, performance::icc)) %>%
              mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))

# now compute SE and p-values for the bootstrapped ICC
ICC_All <- as.data.frame(rbind(
c(mean(dummy_MR1$icc_adj), boot_se(dummy_MR1, icc_adj)$std.err, boot_p(dummy_MR1, icc_adj)$p.value), 
c(mean(dummy_MR2$icc_adj), boot_se(dummy_MR2, icc_adj)$std.err, boot_p(dummy_MR2, icc_adj)$p.value), 
c(mean(dummy_MR3$icc_adj), boot_se(dummy_MR3, icc_adj)$std.err, boot_p(dummy_MR3, icc_adj)$p.value),
c(mean(dummy_MR4$icc_adj), boot_se(dummy_MR4, icc_adj)$std.err, boot_p(dummy_MR4, icc_adj)$p.value),
c(mean(dummy_MR5$icc_adj), boot_se(dummy_MR5, icc_adj)$std.err, boot_p(dummy_MR5, icc_adj)$p.value)))
ICC_All <- cbind(c("All","All","All","All","All"),c("MR1", "MR2", "MR3", "MR4", "MR5"), ICC_All)
colnames(ICC_All) <- c("Set","Factor","Adj_ICC_Mean", "Adj_ICC_SE", "P-Value")

rm(dummy_MR1, dummy_MR2, dummy_MR3, dummy_MR4, dummy_MR5)

#Males Only

#Bootstrap Samples for ICC
dummy_male <- fam_fa[fam_fa$Sex == "male",] %>% bootstrap(100) 

#Calculating ICCs in each Bootstrapped Sample for each of the Factors
dummy_male_MR1 <- dummy_male %>% mutate(models = lapply(.$strap, function(x) {
  lmer(MR1 ~ 1 + (1 | DUMMY_FAMNO), data = x)})) %>% 
  mutate(icc = lapply(.$models, performance::icc)) %>%
  mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))
dummy_male_MR2 <- dummy_male %>% mutate(models = lapply(.$strap, function(x) {
  lmer(MR2 ~ 1 + (1 | DUMMY_FAMNO), data = x)})) %>% 
  mutate(icc = lapply(.$models, performance::icc)) %>%
  mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))
dummy_male_MR3 <- dummy_male %>% mutate(models = lapply(.$strap, function(x) {
  lmer(MR3 ~ 1 + (1 | DUMMY_FAMNO), data = x)})) %>% 
  mutate(icc = lapply(.$models, performance::icc)) %>%
  mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))
dummy_male_MR4 <- dummy_male %>% mutate(models = lapply(.$strap, function(x) {
  lmer(MR2 ~ 1 + (1 | DUMMY_FAMNO), data = x) })) %>% 
  mutate(icc = lapply(.$models, performance::icc)) %>%
  mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))
dummy_male_MR5 <- dummy_male %>% mutate(models = lapply(.$strap, function(x) {
  lmer(MR5 ~ 1 + (1 | DUMMY_FAMNO), data = x)})) %>% 
  mutate(icc = lapply(.$models, performance::icc)) %>%
  mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))

# now compute SE and p-values for the bootstrapped ICC
ICC_Male <- as.data.frame(rbind(
  c(mean(dummy_male_MR1$icc_adj), boot_se(dummy_male_MR1, icc_adj)$std.err, boot_p(dummy_male_MR1, icc_adj)$p.value), 
  c(mean(dummy_male_MR2$icc_adj), boot_se(dummy_male_MR2, icc_adj)$std.err, boot_p(dummy_male_MR2, icc_adj)$p.value), 
  c(mean(dummy_male_MR3$icc_adj), boot_se(dummy_male_MR3, icc_adj)$std.err, boot_p(dummy_male_MR3, icc_adj)$p.value),
  c(mean(dummy_male_MR4$icc_adj), boot_se(dummy_male_MR4, icc_adj)$std.err, boot_p(dummy_male_MR4, icc_adj)$p.value),
  c(mean(dummy_male_MR5$icc_adj), boot_se(dummy_male_MR5, icc_adj)$std.err, boot_p(dummy_male_MR5, icc_adj)$p.value)))
ICC_Male <- cbind(c("Males","Males","Males","Males","Males"),c("MR1", "MR2", "MR3", "MR4", "MR5"), ICC_Male)
colnames(ICC_Male) <- c("Set", "Factor","Adj_ICC_Mean", "Adj_ICC_SE", "P-Value")
rm(dummy_male_MR1, dummy_male_MR2, dummy_male_MR3, dummy_male_MR4, dummy_male_MR5)

#Females Only

#Bootstrap Samples for ICC
dummy_fem <- fam_fa[fam_fa$Sex == "female",] %>% bootstrap(100) 

#Calculating ICCs in each Bootstrapped Sample for each of the Factors
dummy_fem_MR1 <- dummy_fem %>% mutate(models = lapply(.$strap, function(x) {
  lmer(MR1 ~ 1 + (1 | DUMMY_FAMNO), data = x)})) %>% 
  mutate(icc = lapply(.$models, performance::icc)) %>%
  mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))
dummy_fem_MR2 <- dummy_fem %>% mutate(models = lapply(.$strap, function(x) {
  lmer(MR2 ~ 1 + (1 | DUMMY_FAMNO), data = x)})) %>% 
  mutate(icc = lapply(.$models, performance::icc)) %>%
  mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))
dummy_fem_MR3 <- dummy_fem %>% mutate(models = lapply(.$strap, function(x) {
  lmer(MR3 ~ 1 + (1 | DUMMY_FAMNO), data = x)})) %>% 
  mutate(icc = lapply(.$models, performance::icc)) %>%
  mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))
dummy_fem_MR4 <- dummy_fem %>% mutate(models = lapply(.$strap, function(x) {
  lmer(MR2 ~ 1 + (1 | DUMMY_FAMNO), data = x) })) %>% 
  mutate(icc = lapply(.$models, performance::icc)) %>%
  mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))
dummy_fem_MR5 <- dummy_fem %>% mutate(models = lapply(.$strap, function(x) {
  lmer(MR5 ~ 1 + (1 | DUMMY_FAMNO), data = x)})) %>% 
  mutate(icc = lapply(.$models, performance::icc)) %>%
  mutate(icc_adj = do.call(rbind, lapply(.$icc, function(i){ i$ICC_adjusted })))

# now compute SE and p-values for the bootstrapped ICC
ICC_Female <- as.data.frame(rbind(
  c(mean(dummy_fem_MR1$icc_adj), boot_se(dummy_fem_MR1, icc_adj)$std.err, boot_p(dummy_fem_MR1, icc_adj)$p.value), 
  c(mean(dummy_fem_MR2$icc_adj), boot_se(dummy_fem_MR2, icc_adj)$std.err, boot_p(dummy_fem_MR2, icc_adj)$p.value), 
  c(mean(dummy_fem_MR3$icc_adj), boot_se(dummy_fem_MR3, icc_adj)$std.err, boot_p(dummy_fem_MR3, icc_adj)$p.value),
  c(mean(dummy_fem_MR4$icc_adj), boot_se(dummy_fem_MR4, icc_adj)$std.err, boot_p(dummy_fem_MR4, icc_adj)$p.value),
  c(mean(dummy_fem_MR5$icc_adj), boot_se(dummy_fem_MR5, icc_adj)$std.err, boot_p(dummy_fem_MR5, icc_adj)$p.value)))
ICC_Female <- cbind(c("Females","Females","Females","Females","Females"),c("MR1", "MR2", "MR3", "MR4", "MR5"), ICC_Female)
colnames(ICC_Female) <- c("Set", "Factor","Adj_ICC_Mean", "Adj_ICC_SE", "P-Value")
rm(dummy_fem_MR1, dummy_fem_MR2, dummy_fem_MR3, dummy_fem_MR4, dummy_fem_MR5)

ICC_Final <- rbind(ICC_All, ICC_Male, ICC_Female)
ICC_Final

rm(ICC_All, ICC_Male, ICC_Female, dummy, dummy_male, dummy_fem)

pd <- position_dodge(0.2)

ggplot(data=ICC_Final, aes(x=Factor, y=Adj_ICC_Mean, col=Set, group=Set)) + geom_point(position=pd, size=2) + 
  geom_errorbar(aes(ymin=Adj_ICC_Mean-Adj_ICC_SE, ymax=Adj_ICC_Mean+Adj_ICC_SE), width=0.1, position=pd) + 
  geom_line(position=pd) + 
  scale_x_discrete(labels = c("Symmetry/Arranging/Repeating", "Contamination/Washing", "Hoarding/Collecting", "Sex/Agg/Religious", "Doubts/Checking"), name="Symptom Dimension") + 
  scale_y_continuous(name="Adjusted Intraclass Correlation Coefficent")


